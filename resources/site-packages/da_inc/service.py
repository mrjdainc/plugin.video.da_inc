import threading
from da_inc.config import ONLY_CLIENT
from da_inc.logger import log
from da_inc.rpc import server_thread
from da_inc.monitor import da_incMonitor
from da_inc.daemon import da_inc_thread
from da_inc.osarch import PLATFORM

import xbmc

def run():
    # Make sure the XBMC jsonrpc server is started.
    xbmc.startServer(xbmc.SERVER_JSONRPCSERVER, True)

    # Make the monitor
    monitor = da_incMonitor()

    threads = [
        threading.Thread(target=server_thread),  # JSONRPC thread
    ]
    if not ONLY_CLIENT and PLATFORM["fork"]:
        threads.append(threading.Thread(target=da_inc_thread, args=[monitor]))  # da_inc thread

    for t in threads:
        t.daemon = True
        t.start()

    # XBMC loop
    while not xbmc.abortRequested:
        xbmc.sleep(1000)

    log.info("da_inc: exiting da_inc")
